name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run all tests
        run: npm test
        env:
          DISCORD_BOT_TOKEN: test_token
          DISCORD_CLIENT_ID: test_client_id
          DISCORD_CLIENT_SECRET: test_secret
          DATABASE_PATH: ":memory:"
      
      - name: Run integration tests
        run: npm run test:integration
        env:
          DISCORD_BOT_TOKEN: test_token
          DISCORD_CLIENT_ID: test_client_id
          DISCORD_CLIENT_SECRET: test_secret
          DATABASE_PATH: ":memory:"

  security-scan:
    name: Security Scan for Release
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: |
          npm audit --json > npm-audit-report.json || true
          npm audit --audit-level=high || echo "⚠️ High/Critical vulnerabilities found - review before release"
      
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'json'
          output: 'trivy-report.json'
          severity: 'CRITICAL,HIGH,MEDIUM'
      
      - name: Upload security reports
        uses: actions/upload-artifact@v5
        with:
          name: security-reports
          path: |
            npm-audit-report.json
            trivy-report.json
          retention-days: 90

  build-and-release:
    name: Build and Create Release
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Verify all packages
        run: |
          echo "Verifying all packages..."
          
          # Verify API
          cd packages/api
          node -e "console.log('✓ API package structure verified')"
          cd ../..
          
          # Verify Bot
          cd packages/bot  
          node -e "console.log('✓ Bot package structure verified')"
          cd ../..
          
          # Verify Shared
          cd packages/shared
          node -e "console.log('✓ Shared package structure verified')"
          cd ../..
      
      - name: Build dashboard
        run: npm run build --workspace=@dismodular/dashboard
      
      - name: Verify dashboard build
        run: |
          if [ ! -d "packages/dashboard/dist" ]; then
            echo "✗ Dashboard build failed"
            exit 1
          fi
          echo "✓ Dashboard built successfully"
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Download security reports
        uses: actions/download-artifact@v4
        with:
          name: security-reports
          path: security-reports/
      
      - name: Create source archive
        run: |
          git archive --format=zip --output=dismodular-js-v${{ steps.get_version.outputs.VERSION }}.zip HEAD
      
      - name: Create security reports zip
        run: |
          cd security-reports
          zip -r ../security-reports-v${{ steps.get_version.outputs.VERSION }}.zip .
          cd ..
      
      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          CHANGELOG=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: DisModular.js v${{ steps.get_version.outputs.VERSION }}
          body: |
            # DisModular.js v${{ steps.get_version.outputs.VERSION }}
            
            ## What's Changed
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## 📦 Downloads
            
            - **dismodular-js-v${{ steps.get_version.outputs.VERSION }}.zip** - Main distribution
            - **security-reports-v${{ steps.get_version.outputs.VERSION }}.zip** - Security scan reports (npm audit, Trivy)
            
            ## 🔒 Security
            
            This release includes security scanning reports:
            - ✅ NPM Audit for dependency vulnerabilities
            - ✅ Trivy filesystem scan
            - ✅ All tests passing (127/127)
            
            ## Installation
            
            1. Download `dismodular-js-v${{ steps.get_version.outputs.VERSION }}.zip`
            2. Extract the archive
            3. Run `npm install` in the extracted folder
            4. Copy `env.example` to `.env` and configure
            5. Run `npm run setup:db` to initialize database
            6. Run `npm run dev` to start the application
            
            ## Documentation
            
            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) for full documentation.
            
            ---
            
            **Full Changelog**: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
          files: |
            dismodular-js-v${{ steps.get_version.outputs.VERSION }}.zip
            security-reports-v${{ steps.get_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

