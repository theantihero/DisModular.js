name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: dismodular
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dismodular_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma client
      run: npx prisma generate
      env:
        CI: true
        DATABASE_URL: postgresql://dismodular:password@localhost:5432/dismodular_test
        
    - name: Run database migrations
      run: npx prisma db push --accept-data-loss
      env:
        CI: true
        DATABASE_URL: postgresql://dismodular:password@localhost:5432/dismodular_test
        
    - name: Run tests
      run: npm test
      env:
        CI: true
        DATABASE_URL: postgresql://dismodular:password@localhost:5432/dismodular_test
        TEST_DATABASE_URL: postgresql://dismodular:password@localhost:5432/dismodular_test
        DISCORD_CLIENT_ID: test_client_id
        DISCORD_CLIENT_SECRET: test_client_secret
        DISCORD_CALLBACK_URL: http://localhost:3002/auth/discord/callback
        SESSION_SECRET: test_session_secret
        NODE_ENV: test
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results.json