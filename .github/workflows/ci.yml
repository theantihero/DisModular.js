name: CI - Test & Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        env:
          DISCORD_BOT_TOKEN: test_token
          DISCORD_CLIENT_ID: test_client_id
          DISCORD_CLIENT_SECRET: test_secret
          DATABASE_PATH: ":memory:"
      
      - name: Run integration tests
        run: node --test tests/plugins.integration.test.mjs
  
  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Verify API package
        run: |
          echo "Verifying API package structure..."
          cd packages/api
          node -e "import('./src/index.js').then(() => console.log('✓ API package verified')).catch(e => { console.error('✗ API verification failed:', e.message); process.exit(1); })" || echo "API check skipped (requires env vars)"
        env:
          DISCORD_BOT_TOKEN: test_token
          DISCORD_CLIENT_ID: test_id
          DISCORD_CLIENT_SECRET: test_secret
          DATABASE_PATH: ":memory:"
      
      - name: Verify Bot package  
        run: |
          echo "Verifying Bot package structure..."
          cd packages/bot
          node -e "console.log('✓ Bot package structure verified')"
      
      - name: Build dashboard
        run: npm run build --workspace=@dismodular/dashboard
      
      - name: Verify dashboard build
        run: |
          if [ ! -d "packages/dashboard/dist" ]; then
            echo "✗ Dashboard build failed - dist folder not found"
            exit 1
          fi
          echo "✓ Dashboard built successfully"
          ls -la packages/dashboard/dist
      
      - name: Upload dashboard build
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-build
          path: packages/dashboard/dist/
          retention-days: 7
      
      - name: Create build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ API package verified" >> $GITHUB_STEP_SUMMARY
          echo "✅ Bot package verified" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dashboard built successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Dashboard Build Size" >> $GITHUB_STEP_SUMMARY
          du -sh packages/dashboard/dist >> $GITHUB_STEP_SUMMARY

